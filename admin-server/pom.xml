<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<artifactId>admin-server</artifactId>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.3.3.RELEASE</version>
		<relativePath />
	</parent>

	<properties>
		<main.basedir>${basedir}</main.basedir>
		<spring-boot.version>1.3.3.RELEASE</spring-boot.version>
		<spring-cloud.version>Brixton.RELEASE</spring-cloud.version>
		<build-plugin.jacoco.version>0.7.5.201505241946</build-plugin.jacoco.version>
		<build-plugin.coveralls.version>4.0.0</build-plugin.coveralls.version>
		<build-plugin.gpg.version>1.6</build-plugin.gpg.version>
		<build-plugin.asciidoctor.version>1.5.2</build-plugin.asciidoctor.version>
		<build-plugin.exec.version>1.4.0</build-plugin.exec.version>
		<build-plugin.git-commit-id.version>2.2.0</build-plugin.git-commit-id.version>
		<docker.image.prefix>idugalic</docker.image.prefix>
		<docker.plugin.version>0.4.9</docker.plugin.version>
		<java.version>1.8</java.version>
	</properties>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>de.codecentric</groupId>
				<artifactId>spring-boot-admin-server</artifactId>
				<version>1.3.3</version>
			</dependency>
			<dependency>
				<groupId>de.codecentric</groupId>
				<artifactId>spring-boot-admin-server-ui</artifactId>
				<version>1.3.3</version>
			</dependency>

			<dependency>
				<groupId>de.codecentric</groupId>
				<artifactId>spring-boot-admin-example</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-dependencies</artifactId>
				<version>${spring-boot.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>

		<dependency>
			<groupId>de.codecentric</groupId>
			<artifactId>spring-boot-admin-server</artifactId>
		</dependency>
		<dependency>
			<groupId>de.codecentric</groupId>
			<artifactId>spring-boot-admin-server-ui</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-config-client</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-eureka</artifactId>
		</dependency>
	</dependencies>
	

	<build>
		<plugins>
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
					<encoding>${project.build.sourceEncoding}</encoding>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<executions>
					<execution>
						<goals>
							<goal>repackage</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>com.spotify</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<version>${docker.plugin.version}</version>
				<configuration>
				    <skipDockerBuild>true</skipDockerBuild>
					<imageName>${docker.image.prefix}/${project.artifactId}</imageName>
					<imageTags>
						<imageTag>${project.version}</imageTag>
					</imageTags>
					<dockerDirectory>${project.basedir}/src/main/docker</dockerDirectory>
					<resources>
						<resource>
							<targetPath>/</targetPath>
							<directory>${project.build.directory}</directory>
							<include>${project.build.finalName}.jar</include>
						</resource>
						<resource>
							<targetPath>/</targetPath>
							<directory>${project.basedir}/src/main/docker</directory>
							<include>wait-for-it.sh</include>
						</resource>
					</resources>
				</configuration>
			</plugin>
		</plugins>
	</build>
	<!-- Remove for release -->
	<repositories>
		<repository>
			<id>spring-release</id>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
			<url>http://repo.spring.io/release</url>
		</repository>
		<repository>
			<id>spring-milestone</id>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
			<url>http://repo.spring.io/milestone</url>
		</repository>
		<repository>
			<id>spring-snapshot</id>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
			<url>http://repo.spring.io/snapshot</url>
		</repository>
		<repository>
			<id>sonatype-nexus-snapshots</id>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
			<url>https://oss.sonatype.org/content/repositories/snapshots/</url>
		</repository>
	</repositories>
</project>
